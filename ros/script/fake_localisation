#! /usr/bin/env python

from __future__ import print_function

import rospy
from nav_msgs.msg import Odometry
from geometry_msgs.msg import PoseWithCovarianceStamped

class FakeLocalisation(object):

    """Publish pose with covariance msg from odom msg"""

    def __init__(self):
        rospy.Subscriber('ropod/odom_incomplete', Odometry, self.odometry_cb)
        self.loc_pub = rospy.Publisher('fake_localisation', PoseWithCovarianceStamped,
                                  queue_size=1)

    def odometry_cb(self, msg):
        loc_msg = PoseWithCovarianceStamped(header=msg.header, pose=msg.pose)
        self.loc_pub.publish(loc_msg)

if __name__ == "__main__":
    rospy.init_node('fake_localisation')
    OBJ = FakeLocalisation()
    rospy.loginfo("Started FakeLocalisation")
    rospy.spin()
