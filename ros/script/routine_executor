#! /usr/bin/env python

from __future__ import print_function

import os
import rospy
import traceback

from std_msgs.msg import String

from waltzing_robot.waypoint_follower import WaypointFollower

class RoutineExecutor(object):

    """Listens to waypoint config file name on a topic and executes that
    waypoint trajectory"""

    def __init__(self):
        self._wp_follower = WaypointFollower()
        self._wp_config_file_sub = rospy.Subscriber('~config_filename', String, self._execute_wp_trajectory)
        scripts_dir = os.path.abspath(os.path.dirname(__file__))
        main_dir = os.path.dirname(scripts_dir)
        self._waypoints_folder_path = os.path.join(main_dir, 'config/waypoints')
        self._in_motion = False

    def _execute_wp_trajectory(self, msg):
        if self._in_motion:
            rospy.logwarn("Robot in motion. Ignoring request")
            return
        wp_config = msg.data
        waypoint_config_filename = os.path.join(self._waypoints_folder_path,
                                                wp_config + '.yaml')
        print("\n"*3, "Starting", wp_config, "\n"*3)
        self._in_motion = True

        try:
            self._wp_follower.follow_waypoints(waypoint_config_filename)
        except Exception as e:
            rospy.logerr(str(e))
            traceback.print_exc()
            self._wp_follower.publish_zero_vel()

        self._in_motion = False
        print("\n"*3, "Finished", "\n"*3)

if __name__ == "__main__":
    rospy.init_node('routine_executor')
    RE = RoutineExecutor()
    rospy.spin()
